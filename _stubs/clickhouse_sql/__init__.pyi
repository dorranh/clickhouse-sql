# If you want to use mypy or pyright, you may have to ignore some errors, like below:

# mypy: disable-error-code="type-arg"

from typing import overload, List
import numpy as np

NumberType = (int, float, np.number)

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  AUTOGENERATED CODE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# <litgen_stub> // Autogenerated code below! Do not edit!
####################    <generated_from:Lexer.h>    ####################




# <submodule db>
class db:  # Proxy class that introduces typings for the *submodule* db
    pass  # (This corresponds to a C++ namespace. All method are static!)



    class TokenType(enum.IntEnum):
        pass



    class Token:
        type: TokenType
        begin: str # (const)
        end: str   # (const)

        def size(self) -> int:
            pass

        @overload
        def __init__(self) -> None:
            pass
        @overload
        def __init__(self, type_: TokenType, begin_: str, end_: str) -> None:
            pass

        def is_significant(self) -> bool:
            pass
        def is_error(self) -> bool:
            pass
        def is_end(self) -> bool:
            pass


    class Lexer:
        def __init__(self, begin_: str, end_: str, max_query_size_: int = 0) -> None:
            pass
        def next_token(self) -> Token:
            pass



# </submodule db>
####################    </generated_from:Lexer.h>    ####################


####################    <generated_from:ParserQuery.h>    ####################




# <submodule db>
class db:  # Proxy class that introduces typings for the *submodule* db
    pass  # (This corresponds to a C++ namespace. All method are static!)

    class ParserQuery:
        def __init__(
            self,
            end_: str,
            allow_settings_after_format_in_insert_: bool = False,
            implicit_select_: bool = False
            ) -> None:
            pass


# </submodule db>
####################    </generated_from:ParserQuery.h>    ####################

# </litgen_stub>
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  AUTOGENERATED CODE END !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!